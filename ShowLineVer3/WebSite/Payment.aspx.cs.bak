using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using ShowLineVer3.Model;
using ShowLineVer3.ViewModel;
using System.Text; //+kk

namespace ShowLineVer3.WebSite
{
    public partial class Payment : System.Web.UI.Page
    {
        string EID = "";
        string TID = "";
        int viewCountSum = 0;
        int viewTotalCountSum = 0;

        protected void Page_Load(object sender, EventArgs e)
        {
            try
            {
                if (!String.IsNullOrEmpty(Request.QueryString["EID"]))
                {
                    if (!String.IsNullOrEmpty(Request.QueryString["TID"]))
                    {
                        EID = Request.QueryString["EID"].ToString();
                        TID = Request.QueryString["TID"].ToString();
                    }
                    else
                    {
                        ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "Login Validation", "<script type='text/javascript'>alert('Server is busy.Please try again.')</script>", false);
                        Session.Abandon();
                        //Response.Redirect("~/Default.aspx");//-kk redirect
                            Response.Redirect("~/Default.aspx", false);
                            Context.ApplicationInstance.CompleteRequest();

                    }
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "Login Validation", "<script type='text/javascript'>alert('Server is busy.Please try again.')</script>", false);
                    Session.Abandon();
                    Response.Redirect("~/Default.aspx");
                }

                if (!IsPostBack)
                {
                    //EID ="E03061310544648";
                    //TID = "T270613020522395";

                    GetTicketDetails(TID);
                    GetVenueEventDetails();
                }
                else
                {
                    //Session.Abandon();
                    //Response.Redirect("~/Default.aspx");
                }

            }
            catch (Exception ex)
            {
                ErrHandler.WriteError(ex.Message);
            }
        }

        protected void GetTicketDetails(string TID)
        {
            try
            {
                List<PayementDetailsModel> _payementDetailsModel = new List<PayementDetailsModel>();
                PayementDetailsViewModel _payementDetailsViewModel = new PayementDetailsViewModel();

                _payementDetailsModel = _payementDetailsViewModel.PaymentTicketDetails(TID);

                var t = _payementDetailsModel.Sum(tamt => Convert.ToInt32(tamt.AMT));
                viewCountSum = t;

                totval.Value = viewCountSum.ToString(); //kk
                viewTotalCountSum = t + 2 + 2;

                rptPayment.DataSource = _payementDetailsModel;
                rptPayment.DataBind();

                //paymentSubTotal.Text = t.ToString();

            }
            catch (Exception ex)
            {
                ErrHandler.WriteError(ex.Message);
            }

        }

        protected void GetVenueEventDetails()
        {
            try
            {
                EventVenueViewModel _eventVenueViewModel = new EventVenueViewModel();
                EventVenueModel _eventVenueModel = new EventVenueModel();

                _eventVenueModel = _eventVenueViewModel.GetEventVenueModelDetails(EID);

                if (_eventVenueModel != null)
                {
                    EvtImage.Src = _eventVenueModel.EventImage;
                    lblEventName.Text = _eventVenueModel.EventName;
                    lblStreetAddress.Text = _eventVenueModel.StreetAddress;
                    lblCity.Text = _eventVenueModel.City;
                    lblState.Text = _eventVenueModel.StateProvision;
                    lblZip.Text = _eventVenueModel.ZipCode;
                    lblDateTime.Text = Convert.ToDateTime(_eventVenueModel.EventDate).ToString("dd/MMM/yyyy") + " " + Convert.ToDateTime(_eventVenueModel.EventFromTime).ToString("HH:mm");// +" - " + Convert.ToDateTime(_eventVenueModel.EventToTime).ToString("HH:mm"); //-kk
                    lblVenueName.Text = _eventVenueModel.VenueName;

                }

            }
            catch (Exception ex)
            {
                ErrHandler.WriteError(ex.Message);
            }
        }

        protected void btnSubmit_ServerClick(object sender, EventArgs e)
        {
            try
            {
                if (!String.IsNullOrEmpty(EID) && !String.IsNullOrEmpty(TID))
                {
                    //PAYMENT PROCEDURE
                    

                    //UPDATE TICKET STATUS

                    //Response.Redirect("~/WebSite/Confirmation.aspx?EID=" + EID + "&TID=" + TID);
                    //////+kk
                    try
                    {
                        E4.ServiceSoapClient ws = new E4.ServiceSoapClient();
                        E4.Transaction txn = new E4.Transaction();
                        // set correct credential values, to be replaced with "live" values
                        txn.ExactID = "AD3533-06";
                        txn.Password = "n92b65pm";

                        txn.Transaction_Type = "00";
                        txn.Card_Number = txtCardNumber.Text;// "4111111111111111";  //visa 4111111111111111 
                        //txn.Card_Number = "5500000000000004"; //master card  
                        //txn.Card_Number = "6011000000000004"; //Discover card  
                        //txn.Card_Number = "3566002020140006"; //JCB card  
                        txn.CardHoldersName = txtCard.Text;// "test name 1";
                        //txn.DollarAmount =  "10.00";
                        //txn.Expiry_Date = "1114"; //mmyy
                        txn.DollarAmount = totval.Value; //"10.00";
                        txn.Expiry_Date = ccMonth.Text + ccYear.Value; //"1114"; //mmyy


                        txn.VerificationStr2 = txtCVV.Text;// "123";  //CVV
                        txn.CVD_Presence_Ind = "1";

                        E4.TransactionResult result = ws.SendAndCommit(txn);

                        Console.WriteLine(result.CTR);
                        Console.WriteLine("e4 resp code: " + result.EXact_Resp_Code);
                        Console.WriteLine("e4 message: " + result.EXact_Message);
                        Console.WriteLine("e4 CVV Result: " + result.CVV2);
                        Console.WriteLine("bank resp code: " + result.Bank_Resp_Code);
                        Console.WriteLine("bank message: " + result.Bank_Message);

                        if (result.EXact_Resp_Code == "00") //Approved
                        {
                            EventTicketDetailsViewModel _eventTicketDetailsViewModel = new EventTicketDetailsViewModel();
                            _eventTicketDetailsViewModel.UpdateTicketStatus(TID, EID, result.CTR, result.EXact_Resp_Code, result.Bank_Resp_Code + " MSG :  " + result.EXact_Message, result.Bank_Message);
                            _eventTicketDetailsViewModel = null;

                            Response.Redirect("~/WebSite/Confirmation.aspx?EID=" + EID + "&TID=" + TID, false);
                            Context.ApplicationInstance.CompleteRequest();
                        }
                        //Response.Redirect("~/WebSite/Confirmation.aspx?EID=" + EID + "&TID=" + TID);
                        else
                        {
                            System.Text.StringBuilder sb = new System.Text.StringBuilder();
                            sb.Append(@"<script language='javascript'>");
                            sb.Append(@"alert('Transaction Declined : " + result.EXact_Message + "')");
                            //sb.Append(@"lbl.style.color='red';");
                            sb.Append(@"</script>");

                            //ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "Error", "javascript:alert('Transaction Decline : '" + result.EXact_Message + "' );", true);
                            ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "Transaction Decline", sb.ToString(), false);

                            //Response.Redirect("~/WebSite/Decline.aspx?EID=" + EID + "&TID=" + TID); //for test, To be replaced with Decline page, put "result.EXact_Message" message in the decline page.
                        }
                    }
                    catch (Exception ex1)
                    {
                        ErrHandler.WriteError(ex1.Message);

                        if (ex1.Message.ToUpper().Contains("TOO BUSY"))
                        {
                            ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "Error", "javascript:alert('Service Not responding.Please try after sometime.');", true);
                        }
                        else
                        {
                            ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "Error", "javascript:alert('Unexpected error occur please try after sometime.');", true);
                        }
                        Response.Redirect("/WebSite/events-List?ID=" + EID + "&EN=" + "");
                    }
                }
            }
            catch (Exception ex)
            {
                ErrHandler.WriteError(ex.Message);
            }
        }
        
        protected void rptPayment_ItemDataBound(object sender, RepeaterItemEventArgs e)
        {
            //if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
            //{
            //    int viewCount = Convert.ToInt32(DataBinder.Eval(e.Item.DataItem, "AMT"));
            //    viewCountSum += viewCount;
            //}
        }

        public string SubtotalP()
        {
            try
            {
                return viewCountSum.ToString();
            }
            catch (Exception ex)
            {                
                ErrHandler.WriteError(ex.Message);
                ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "Error", "javascript:alert('Unexpected error occur please try after sometime.');", true);
                Response.Redirect("/WebSite/events-List?ID=" + EID + "&EN=" + "");
                return "";                
            }
        }

        public string totalAmtP()
        {
            try
            {
                return viewTotalCountSum.ToString();
            }
            catch (Exception ex)
            {
                ErrHandler.WriteError(ex.Message);
                ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "Error", "javascript:alert('Unexpected error occur please try after sometime.');", true);
                Response.Redirect("/WebSite/events-List?ID=" + EID + "&EN=" + "");
                return "";
            }
        }
    }
}